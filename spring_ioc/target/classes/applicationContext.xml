<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- UserService的创建权交给了Spring -->
    <!--<bean id="userService" class="com.lion.ioc.demo1.UserServiceImpl">-->
        <!--&lt;!&ndash; 设置属性   依赖注入 &ndash;&gt;-->
        <!--<property name="name" value="李四"></property>-->
    <!--</bean>-->

    <!-- Bean的实例化的三种方式==================================== -->
    <!-- 第一种：无参构造器的方式 -->
    <!--<bean id="bean1" class="com.lion.ioc.demo2.Bean1"></bean>-->

    <!-- 第二种：静态工厂的方式 -->
    <!--<bean id="bean2" class="com.lion.ioc.demo2.Bean2Factory" factory-method="createBean2"></bean>-->

    <!-- 第三种：实例工厂的方式 -->
    <!--<bean id="bean3Factory" class="com.lion.ioc.demo2.Bean3Factory"></bean>-->
    <!--<bean id="bean3" factory-bean="bean3Factory" factory-method="createBean3"></bean>-->

    <!-- Bean的作用范围 -->
    <!--<bean id="person" class="com.lion.ioc.demo3.Person" scope="prototype"></bean>-->

    <!--<bean id="man" class="com.lion.ioc.demo3.Man" init-method="setup" destroy-method="teardown">-->
        <!--<property name="name" value="航哥"></property>-->
    <!--</bean>-->
    <!--<bean class="com.lion.ioc.demo3.MyBeanPostProcessor"></bean>-->

    <!--<bean id="userDao" class="com.lion.ioc.demo3.UserDaoImpl"></bean>-->

    <!-- Bean的构造方法的属性注入 -->
    <bean id="user" class="com.lion.ioc.demo4.User">
        <constructor-arg name="name" value="zhangsan"></constructor-arg>
        <constructor-arg name="age" value="23"></constructor-arg>
    </bean>

    <!--<bean id="person" class="com.lion.ioc.demo4.Person">-->
    <!--<property name="name" value="李四"></property>-->
    <!--<property name="age" value="25"></property>-->
    <!--<property name="cat" ref="cat"></property>-->
    <!--</bean>-->

    <!--<bean id="cat" class="com.lion.ioc.demo4.Cat">-->
        <!--<property name="name" value="ketty"></property>-->
    <!--</bean>-->

    <!-- Bean的p名称空间的属性注入=============== -->
    <bean id="person" class="com.lion.ioc.demo4.Person" p:name="大黄" p:age="34" p:cat-ref="cat"></bean>

    <bean id="cat" class="com.lion.ioc.demo4.Cat" p:name="小黄"></bean>

    <!-- Bean的SpEL的属性注入=============== -->
    <bean id="category" class="com.lion.ioc.demo4.Category">
        <property name="name" value="#{'服装'}"></property>
    </bean>

    <bean id="productInfo" class="com.lion.ioc.demo4.ProductInfo"></bean>

    <bean id="product" class="com.lion.ioc.demo4.Product">
        <property name="name" value="#{'男装'}"></property>
        <property name="price" value="#{productInfo.calculatePrice()}"></property>
        <property name="category" value="#{category}"></property>
    </bean>

    <!-- 复杂类型的属性注入 -->
    <bean id="collectionBean" class="com.lion.ioc.demo5.CollectionBean">
        <!-- 数组类型 -->
        <property name="arrs">
            <list>
                <value>aaa</value>
                <value>bbb</value>
                <value>ccc</value>
            </list>
        </property>
        <!-- List集合的属性注入 -->
        <property name="list">
            <list>
                <value>111</value>
                <value>222</value>
                <value>333</value>
            </list>
        </property>
        <!-- Set集合的属性注入 -->
        <property name="set">
            <set>
                <value>ddd</value>
                <value>eee</value>
                <value>fff</value>
            </set>
        </property>
        <!-- Map集合的属性注入 -->
        <property name="map">
            <map>
                <entry key="aaa" value="111"></entry>
                <entry key="bbb" value="222"></entry>
                <entry key="ccc" value="333"></entry>
            </map>
        </property>
        <!-- Properties的属性注入 -->
        <property name="properties">
            <props>
                <prop key="username">root</prop>
                <prop key="password">1354</prop>
            </props>
        </property>
    </bean>
</beans>